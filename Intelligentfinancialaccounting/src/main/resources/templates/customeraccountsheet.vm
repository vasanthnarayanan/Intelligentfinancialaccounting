<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Sales Sheet</title>
<link href="/css/bootstrap.min.css" rel="stylesheet">
<link href="/css/jquery.dataTables.min.css" rel="stylesheet">
<link href="/css/ifas/ifas.css" rel="stylesheet">
<style type="text/css">
.otherdateclass,.grosstotalwrapper {
  display: none;
}
tr.group,
tr.group:hover {
    background-color: #ddd !important;
}
.notopborder{
color: #efefef;
background-color: #333;
}
.nobottomborder{
color: #efefef;
background-color: #333;
}
.notopborder td {
border-top: 1px dotted #ddd !important;
}
.nobottomborder td {
border-bottom: none !important;
}
.padding-bottom{
padding-bottom: 20px;
}
</style>
<script src="/js/jquery.latest.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/jquery.dataTables.min.js"></script>
<script type="text/javascript">
$(document).ready(function(){
var currentPage = 0;
var pages=0;
var lastPage;
var jsonData;
var displayLengthModified = false;
var initialized = false;
$.fn.dataTableExt.oApi.fnPagingInfo = function ( oSettings )
{
    return {
        "iStart":         oSettings._iDisplayStart,
        "iEnd":           oSettings.fnDisplayEnd(),
        "iLength":        oSettings._iDisplayLength,
        "iTotal":         oSettings.fnRecordsTotal(),
        "iFilteredTotal": oSettings.fnRecordsDisplay(),
        "iPage":          oSettings._iDisplayLength === -1 ?
            0 : Math.ceil( oSettings._iDisplayStart / oSettings._iDisplayLength ),
        "iTotalPages":    oSettings._iDisplayLength === -1 ?
            0 : Math.ceil( oSettings.fnRecordsDisplay() / oSettings._iDisplayLength )
    };
};
var casTable = $('#customeraccountsheet').DataTable( {
		"processing": true,
        "serverSide": true,
        "ordering": false,
        "searching": false,
        "ajax": "/listActiveAccounts?rowCount="+${rowCount}+"&customerId="+${customerId}+"&initialBalance="+${initialBalance},
        "columns": [
        	{ "data": "recordDate", "visible": false },
            { "data": null,
            	"render": function(data,type,row,meta){
            		if(row.recordType=="sales"){
            		return '<a class="redirect" href="/editSales?recordid='+row.recordId+'"> '+row.pieces+' x '+row.cost+'</a>';
            		}else if(row.recordType=="expenditure"){
            		return '<a class="redirect" href="/editTransaction?recordid='+row.recordId+'">Expenditure</a>';
            		}else{
            		return '';
            		}
            	} },
            { "data": null,
            	"render": function(data,type,row,meta){
            		if(row.recordType=="purchase"){
            		return '<a class="redirect" href="/editPurchase?recordid='+row.recordId+'"> '+row.pieces+' x '+row.cost+'</a>';
            		}else if(row.recordType=="fault"){
            		return '<a class="redirect" href="/editFault?recordid='+row.recordId+'"> '+row.pieces+' x '+row.cost+'</a>';
            		}else if(row.recordType=="income"){
            		return '<a class="redirect" href="/editTransaction?recordid='+row.recordId+'">Income</a>';
            		}else{
            		return '';
            		}
            	} },	
            { "data":"remarks",
            	"render": function(data,type,row,meta){
            		if(null == row.remarks){
            			return '<small></small>';
            		}else{
            			return '<small class="text-muted">'+row.remarks+'</small>';
            		}
            		
            	} },
            { "data": null, 
            	"render": function(data,type,row,meta){
            		if(row.recordType=="purchase" || row.recordType=="fault" || row.recordType=="income"){
            		return row.total;
            		}else{
            		return '';
            		}
            	} },
            { "data": null, 
            	"render": function(data,type,row,meta){
            		if(row.recordType=="sales" || row.recordType=="expenditure"){
            		return row.total;
            		}else{
            		return '';
            		}
            	} }
        ],
        "initComplete": function(settings, json) {
        pages = this.fnPagingInfo().iTotalPages;
        if(currentPage==0){
        	var initialBalance = ${initialBalance};
	        if(initialBalance>0){
	        $('#customeraccountsheet').find('thead').append('<tr class="nobottomborder prevBalanceWrap"><td colspan=4>Previous Balance</td><td class="prevbalance">' + initialBalance + '</td></tr>');
	        }else{
	        $('#customeraccountsheet').find('thead').append('<tr class="nobottomborder prevBalanceWrap"><td colspan=3>Previous Balance</td><td class="prevbalance">' + initialBalance + '</td><td></td></tr>');
	        }
        }
        if(pages>1)
        {
	        if(json.prevBalance>0){
	        $('#customeraccountsheet').find('thead').append('<tr class="nobottomborder prevPageBalanceWrap"><td colspan=4>Previous Page Balance</td><td class="prevPagebalance">' + json.prevBalance + '</td></tr>');
	        }else{
	        $('#customeraccountsheet').find('thead').append('<tr class="nobottomborder prevPageBalanceWrap"><td colspan=3>Previous Page Balance</td><td class="prevPagebalance">' + json.prevBalance + '</td><td></td></tr>');
	        }
	        if(currentPage==0){
					      $('.prevPageBalanceWrap').hide();  
	        }
        }
        
      $('#customeraccountsheet').find('tfoot').append('<tr class="notopborder"><td colspan=4>Sales</td><td class="totalsales">' + json.totalSales + '</td></tr>').append('<tr class="notopborder"><td colspan=3>Purchase</td><td class="totalpurchase">' + json.totalExpenditure + '</td><td></td></tr>');
      
      if(json.total>0){
      	$('#customeraccountsheet').find('tfoot').append('<tr class="notopborder"><td colspan=4>Page total</td><td class="total">' + json.total + '</td></tr>');
      }else{
      	$('#customeraccountsheet').find('tfoot').append('<tr class="notopborder"><td colspan=3>Page total</td><td class="total">' + json.total + '</td><td></td></tr>');
      }
      
      initialized = true;
      lastPage = currentPage;
      
    },

    "headerCallback": function(thead, data, start, end, display) {
      currentPage = this.fnPagingInfo().iPage;
		if(currentPage==0){
		$('.prevBalanceWrap').show();
		$('.prevPageBalanceWrap').hide();
		}else{
		$('.prevBalanceWrap').hide();
		$('.prevPageBalanceWrap').show();
		}
		// currentPage != lastPage condition is checked so that data is not manipulated twice for same page
		// when user is traversing within the page
      if (currentPage != lastPage && data.length > 0 && initialized) {
      	//alert('fix page as balance are not displayed properly because data object only contains row data');
      	var prevPageBalance = $('#customeraccountsheet').find('.prevPagebalance');
      	if(jsonData.prevBalance>0){
      		$(prevPageBalance).parent().html('<td colspan=4>Previous Page Balance</td><td class="prevPagebalance">' + jsonData.prevBalance + '</td>');
      	}else{
      		$(prevPageBalance).parent().html('<td colspan=3>Previous Page Balance</td><td class="prevPagebalance">' + jsonData.prevBalance + '</td><td></td>');
      	}
      }

    },
    "footerCallback": function(tfoot, data, start, end, display) {
		var total = $('#customeraccountsheet').find('.total');
      if (currentPage != lastPage && data.length > 0 && initialized) {
		$('#customeraccountsheet').find('.totalsales').text(jsonData.totalSales);
		$('#customeraccountsheet').find('.totalpurchase').text(jsonData.totalExpenditure);
        
	      if(jsonData.total>0){
	      	$(total).parent().html('<td colspan=4>Page total</td><td class="total">' + jsonData.total + '</td>');
	      }else{
	      	$(total).parent().html('<td colspan=3>Page total</td><td class="total">' + jsonData.total + '</td><td></td>');
	      }
	      
        lastPage = currentPage;
      }
    },
        "drawCallback": function ( settings ) {
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;
 
            api.column(0, {page:'current'} ).data().each( function ( group, i ) {
                if ( last !== group ) {
                    $(rows).eq( i ).before(
                        '<tr class="group"><td colspan="5">'+group+'</td></tr>'
                    );
 
                    last = group;
                }
            } );
        }
    } );
    // Used to catch json data from xhr calls so that it can be used
    // for data manipulation
    casTable.on( 'xhr', function () {
	    jsonData = casTable.ajax.json();
	    var total = $('#customeraccountsheet').find('.total');
		      if (displayLengthModified && jsonData.data.length > 0 && initialized) {
				$('#customeraccountsheet').find('.totalsales').text(jsonData.totalSales);
				$('#customeraccountsheet').find('.totalpurchase').text(jsonData.totalExpenditure);
		        
			      if(jsonData.total>0){
			      	$(total).parent().html('<td colspan=4>Page total</td><td class="total">' + jsonData.total + '</td>');
			      }else{
			      	$(total).parent().html('<td colspan=3>Page total</td><td class="total">' + jsonData.total + '</td><td></td>');
			      }
			      
		      }
	} );
	// OnPageLengthChange listener used to update data
	casTable.on( 'length.dt', function ( e, settings, len ) {
		displayLengthModified = true;
	});
		
});
</script>
</head>
<body id="transaction">
#parse("mainnavigation.vm")
<div id="contentcontainer" class="container-fluid">
  <div class="row">
    <div id="sidenavigation" class="col-sm-3">
      <div class="list-group">
        <a href="/addTransaction" class="list-group-item">Add Transaction</a>
        <a href="/showSalesSheet" class="list-group-item">Sales Sheet</a>
        <a href="/showPurchaseSheet" class="list-group-item">Purchase Sheet</a>
        <a href="/showFaultSheet" class="list-group-item">Fault Sheet</a>
      </div>
    </div>
    <div id="content" class="col-sm-9">
      <div class="row">
      <div class="well text-uppercase"><b>${customerName}</b></div>
      </div>
      <div class="row">
      <table id="customeraccountsheet" class="display" width="100%" cellspacing="0">
        <thead>
            <tr>
            	<th>Date</th>
                <th>Sales</th>
                <th>Purchase/Fault</th>
                <th>Remarks</th>
                <th>Purchase Gross</th>
                <th>Sales Gross</th>
            </tr>
        </thead>
        <tfoot>
        </tfoot>
       </table>
      </div>
    </div>
  </div>
</div>

</body>
</html>